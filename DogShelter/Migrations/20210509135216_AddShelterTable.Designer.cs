// <auto-generated />
using DogShelter.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DogShelter.Migrations
{
    [DbContext(typeof(DogShelterDbContext))]
    [Migration("20210509135216_AddShelterTable")]
    partial class AddShelterTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DogShelter.Model.Dog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("Age")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("ShelterId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ShelterId");

                    b.ToTable("Dog");

                    b.HasData(
                        new
                        {
                            Id = 2L,
                            Age = 14,
                            Breed = "Beagle",
                            Name = "Lulu",
                            ShelterId = 1L
                        },
                        new
                        {
                            Id = 1L,
                            Age = 1,
                            Breed = "Jack Russel Terrier",
                            Name = "Zsuli",
                            ShelterId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            Age = 1,
                            Breed = "Cuki",
                            Name = "Füge",
                            ShelterId = 2L
                        },
                        new
                        {
                            Id = 4L,
                            Age = 15,
                            Breed = "Valami",
                            Name = "Guszti",
                            ShelterId = 1L
                        });
                });

            modelBuilder.Entity("DogShelter.Model.Shelter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Shelter");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "Gödöllő",
                            Name = "Gödöllői menhely"
                        },
                        new
                        {
                            Id = 2L,
                            Address = "Szada",
                            Name = "Lelenc menhely"
                        });
                });

            modelBuilder.Entity("DogShelter.Model.Dog", b =>
                {
                    b.HasOne("DogShelter.Model.Shelter", null)
                        .WithMany("Dogs")
                        .HasForeignKey("ShelterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
